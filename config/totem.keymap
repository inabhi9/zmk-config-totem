//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&sk { quick-release; };

/ {
    combos {
        compatible = "zmk,combos";

        lastapp {
            bindings = <&kp LG(TAB)>;
            key-positions = <35 36>;
            timeout-ms = <60>;
            layers = <0>;
        };

        copy {
            bindings = <&kp LG(C)>;
            key-positions = <22 23>;
            layers = <0>;
        };

        paste {
            bindings = <&kp LG(V)>;
            key-positions = <23 24>;
            layers = <0>;
        };

        cut {
            bindings = <&kp LG(X)>;
            key-positions = <22 24>;
            layers = <0>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <7 8>;
            layers = <0 1>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <15 26>;
            layers = <0 1>;
        };

        left_paranthesis {
            bindings = <&left_parenthesis>;
            key-positions = <17 16>;
            layers = <0 1>;
        };

        right_paranthesis {
            bindings = <&right_parenthesis>;
            key-positions = <17 18>;
            layers = <0 1>;
        };

        hyphen {
            bindings = <&kp KP_MINUS>;
            key-positions = <16 27>;
            layers = <0 1>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <29 18>;
            layers = <0 1>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <23 12>;
            layers = <0 1>;
        };

        left_square_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 28>;
            layers = <0 1>;
        };

        right_square_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <28 29>;
            layers = <0 1>;
        };

        amphersand {
            bindings = <&kp AMPS>;
            key-positions = <8 18>;
            layers = <0 1>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <6 16>;
            layers = <0 1>;
        };

        asterisk {
            bindings = <&kp ASTRK>;
            key-positions = <17 7>;
            layers = <0 1>;
        };

        emoji {
            bindings = <&kp LC(LG(SPACE))>;
            key-positions = <11 12 13>;
            layers = <0>;
        };

        equal {
            bindings = <&kp KP_EQUAL>;
            key-positions = <13 24>;
            layers = <0 1>;
        };

        doller {
            bindings = <&kp DOLLAR>;
            key-positions = <3 13>;
            layers = <0 1>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <2 12>;
            layers = <0 1>;
        };

        tild {
            bindings = <&kp TILDE>;
            key-positions = <14 25>;
            layers = <0 1>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <4 14>;
            layers = <0 1>;
        };

        grev {
            bindings = <&kp GRAVE>;
            key-positions = <11 22>;
            layers = <0 1>;
        };

        at_the_rate {
            bindings = <&kp AT>;
            key-positions = <1 11>;
            layers = <0 1>;
        };

        select_word_l {
            bindings = <&kp LS(LA(LEFT))>;
            key-positions = <1 2>;
            layers = <1 0>;
        };

        select_word_r {
            bindings = <&kp LS(LA(RIGHT))>;
            key-positions = <3 2>;
            layers = <1 0>;
        };

        forward_slash {
            bindings = <&kp SLASH>;
            key-positions = <17 28>;
            layers = <0 1>;
        };

        backspace_l {
            bindings = <&kp BACKSPACE>;
            key-positions = <2 1>;
            layers = <0>;
        };

        delete_l {
            bindings = <&kp DELETE>;
            key-positions = <2 3>;
            layers = <0>;
        };

        spotlight {
            bindings = <&kp LG(SPACE)>;
            key-positions = <33 34>;
        };
    };

    behaviors {
        left_parenthesis: left_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_PARENTHESIS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        right_parenthesis: right_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "RIGHT_PARENTHESIS";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        que_excl: que_excl {
            compatible = "zmk,behavior-mod-morph";
            label = "QUE_EXCL";
            bindings = <&kp QUESTION>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        thumb_sl: thumb_sl {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_SL";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <268>;
            quick-tap-ms = <170>;
            flavor = "balanced";
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };

        alt_tab_kp: alt_tab_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "ALT_TAB_KP";
            bindings = <&kp>, <&alt_tab>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <100>;
            quick-tap-ms = <60>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        shift_capsw: shift_capsw {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPSW";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT>, <&caps_word>;

            tapping-term-ms = <250>;
        };

        lt_repeat: lt_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_REPEAT";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
        };
    };

    macros {
        company_email: company_email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp A &kp B &kp H &kp I &kp N &kp A &kp V &kp DOT &kp K &kp O &kp T &kp A &kp K &kp AT &kp S &kp E &kp N &kp N &kp D &kp E &kp R &kp DOT &kp C &kp O &kp M>;
            label = "COMPANY_EMAIL";
        };

        alt_tab: alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp TAB &to 3>;

            label = "ALT_TAB";
        };

        alt_tab_end: alt_tab_end {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_release>, <&kp LEFT_GUI>, <&macro_tap>, <&to 0>;

            label = "ALT_TAB_END";
        };

        vsc_2args: vsc_1arg {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_GUI &macro_param_2to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>;

            label = "VSC_1ARG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                   &kp Q  &kp W  &kp E            &kp R            &kp T                          &kp Y                        &kp U             &kp I               &kp O    &kp P
                   &kp A  &kp S  &hrm LEFT_GUI D  &hrm LEFT_ALT F  &kp G                          &kp H                        &hrm RIGHT_ALT J  &hrm RIGHT_GUI K    &kp L    &kp SEMI
&hrm LCTRL ESCAPE  &kp Z  &kp X  &kp C            &kp V            &kp B                          &kp N                        &kp M             &kp COMMA           &kp DOT  &que_excl  &hrm LA(LC(LG(LEFT_SHIFT))) SINGLE_QUOTE
                                 &kp TAB          &thumb_sl 1 3    &hrm LA(LC(LEFT_GUI)) SPACE    &hrm RA(RC(RGUI)) BACKSPACE  &shift_capsw      &lt_repeat 2 ENTER
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        nav_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NAVI";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                        &trans  &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &kp HOME    &kp KP_MINUS  &kp KP_N7                   &kp KP_N8              &kp KP_N9        &kp KP_MULTIPLY
                        &trans  &kp LEFT      &kp DOWN  &kp RIGHT      &kp END     &kp KP_PLUS   &hrm RIGHT_ALT KP_NUMBER_4  &hrm RGUI KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_EQUAL
&hrm LEFT_CONTROL CAPS  &trans  &kp PG_UP     &none     &kp PG_DN      &trans      &kp KP_N0     &kp KP_N1                   &kp KP_N2              &kp KP_N3        &kp KP_DOT       &mkp RCLK
                                              &trans    &trans         &trans      &trans        &trans                      &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        fn_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "FN";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     !     ┃     @     ┃     #     ┃     $     ┃     %     ┃   ┃     ˆ     ┃     &     ┃     Ü     ┃     '     ┃     "     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     Ä     ┃           ┃    SZ     ┃           ┃           ┃   ┃   MUTE    ┃   YEN     ┃   EURO    ┃  POUND    ┃     Ö     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃  EMAIL1   ┃  EMAIL2   ┃           ┃           ┃           ┃   ┃   VOL-    ┃   VOL+    ┃   LAST    ┃   NEXT    ┃     \     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    GIF    ┃    ADJ    ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
            &none  &kp F7  &kp F8  &kp F9  &kp F12    &trans  &trans                &kp LS(LA(LC(UP_ARROW)))  &trans                &bt BT_SEL 2
            &none  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &kp C_BRIGHTNESS_DEC  &trans                    &kp C_BRIGHTNESS_INC  &bt BT_SEL 1
&bt BT_CLR  &none  &kp F1  &kp F2  &kp F3  &kp F10    &trans  &kp C_VOL_DN          &kp C_MUTE                &kp C_VOLUME_UP       &bt BT_SEL 0  &none
                           &trans  &trans  &trans     &trans  &trans                &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        to_app_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "TVP 1";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃ NEXT FILE ┃ MARK IN   ┃ ROTATE    ┃ MARK OUT  ┃ SHOW SNAP ┃   ┃           ┃           ┃           ┃           ┃           ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ TVP II    ┃ LEFT      ┃ PAN       ┃ RIGHT     ┃ PLAY/FLIP ┃   ┃           ┃           ┃           ┃           ┃           ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃ FULLSCR   ┃ SHIFT     ┃ COPY      ┃ DELETE    ┃ PASTE     ┃ IMG MARK  ┃   ┃           ┃           ┃           ┃           ┃           ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃ UNDO/SAVE ┃  SEL/MOV  ┃   ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
       &none  &none  &none    &none        &none           &none         &none         &none         &none  &none
       &none  &none  &none    &none        &none           &none         &none         &none         &none  &none
&none  &none  &none  &sl 5    &sl 4        &none           &none         &none         &none         &none  &none  &none
                     &kp TAB  &kp LS(TAB)  &alt_tab_end    &alt_tab_end  &alt_tab_end  &alt_tab_end
            >;
        };

        vscode_layer {
            bindings = <
                   &trans  &trans         &kp LS(LC(LG(DOWN)))    &trans         &kp LA(LG(LS(T)))    &kp LG(T)  &kp RG(B)  &vsc_2args K Z  &kp RS(RA(RG(RIGHT_BRACKET)))  &kp LG(P)
                   &trans  &kp LG(LS(F))  &kp LA(LS(DOWN_ARROW))  &kp LA(LS(F))  &trans               &trans     &trans     &kp LG(J)       &trans                         &trans
&vsc_2args SEMI C  &trans  &trans         &kp LG(LS(P))           &trans         &trans               &trans     &trans     &trans          &trans                         &trans     &trans
                                          &trans                  &trans         &trans               &trans     &trans     &trans
            >;
        };

        chrome_layer {
            bindings = <
        &trans         &trans  &trans  &trans  &kp LG(T)    &trans  &trans  &kp LG(LS(N))  &trans  &trans
        &kp LG(L)      &trans  &trans  &trans  &trans       &trans  &trans  &trans         &trans  &trans
&trans  &kp LG(LS(T))  &trans  &trans  &trans  &trans       &trans  &trans  &trans         &trans  &trans  &trans
                               &trans  &trans  &trans       &trans  &trans  &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };
};
